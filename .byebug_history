continue
shift.errors
shift.valid?
expect(shift).not_to be_valid
shift.valid?
shift.start_time="lunes"
up
step
up
step
expect(shift).not_to be_valid
shift.valid?
shift.start_time=nil
shift.valid?
continue
shift.errors
self.errors
errors
shift.valid?
shift
shift.start_time="lunes"
shift
exit
end
continue
up
step
continue
self.start_time
self.end_time
self
up
step
up
step
up
step
help
up
step
up
step
self
up
step
DateTime.new(2001,1,1,10,0)
self.start_time < self.end_time
self.end_time.min
self.start_time.min
self.start_time.hour
self.end_time
self.start_time
self
exit
continue
self
continue
shift.valid?
shift
continue
offsprings_params
offspring_params
exit
offsprings_params
offpsrings_params
offsprings_params
continue
params
continue
redirect_to home_path
redirect_to home_pth
redirect_to home
cancel
params
current_user.offsprings.build(offsprings_params)
current_user
exit
var all
var local
offspring.shift.nil?
offspring.shift
offspring
offsrping
shift
exit
offspring
shift
quit
offspring.shift?
shift.sites_available?
shift.nil?
shift
continue
offspring.valid?
offspring
exit
offspring.shift.nil?
offspring.shift.valid?
offspring.valid?
offspring
shift.valid?
exit
offspring.valid?
offspring
shift
exit
offspring.shift.valid?
offspring.shift=shift
offspring.shift.nil?
offspring.shift
shift
offspring.valid?
offspring
offpsring
shift.save
shift
exit
shift.sites_available?
shift.sites_available
shift.sites_available?
shift.valid?
shift.prebooked=shift.room.capacity
shift.room.capacity
shift.valid?
shift
exit
shift.offsprings
shift.offspring
shift
shift.sites_available?
shift
exit
shift.sites_available
shift
exit
shift.sites_available
offspring.save
shift.sites_available
shift.sites_available?
offspring
offspring.valid?
offspring.shift=shift
shift.save
offspring
shift.sites_available?
shift.sites_available
shift.sites_available?
shift.room.capacity
shift.prebooked=29
shift.room.capacity
shift
shift.sites_available
shift.sites_available?
exit
shift.sites_available
shift.sites_available?
shift.has_space?
shift
exit
shift.sites_available?
shift.room.capacity
shift.sites_available?
shift
shift.available?
shift
exit
shift.sites_available?
shift
shift.sites_available?
shift.save
shift.sites_available?
shift
exit
shift.sites_available?
shift
shift.offsrping.count
shift.offsprings.count
shift.room.capacity
shift.room
shift
shift.room.space
shift
self
shift.save
Shift.count
shift.count
offspring
shift
exit
offspring.valid?
offspring
offspring.shift=shift
shift.save
offspring.shift=shift
offspring
offspring.shift=shift
shift
offspring
response
resposne
continue
@shift.offsprings.each
@shift
up
continue
sh.nil?
sh=Shift.find_by_id(params[400])==nil
sh=Shift.find_by_id(params["id"])
sh=Shift.find_by_id(params["id]")
params
var all
continue
od.save!
od
of
od.shift=nil
od
of
od=Offspring.find_by_id(params["id"])
params
continue
of
exit
of
~of
continue
Offspring.find_by_id(params["format"]).shift
Shift.find_by_id(params["shift"])
params["shift"]
params
Offspring.find_by_id(params["format"])
Offsprings.Find_by_id(params["format"])
Offspring.Find_by_id(params["format"])
params["format"]
offspring
@offspring
var all
var local
var
params
continue
params
continue
request
url
params
var all
continue
@shift
@offspring
@offsrping
params
var all
continue
var all
var
